#-------------------------------------------------------------------------
#   rxtx is a native interface to serial ports in java.
#   Copyright 1997, 1998, 1999 by Trent Jarvi trentjarvi@yahoo.com.
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Library General Public
#   License as published by the Free Software Foundation; either
#   version 2 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public
#   License along with this library; if not, write to the Free
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#-------------------------------------------------------------------------
AC_INIT(src/SerialImp.c)
AM_CONFIG_HEADER(config.h)
AC_CANONICAL_SYSTEM
AC_MSG_WARN(Trying libtool.  If the following fails install libtool)
AM_PROG_LIBTOOL
AM_INIT_AUTOMAKE(Serial,1.2.10)
AC_PROG_CC
AC_CHECK_HEADERS(fcntl.h)
AC_CHECK_HEADERS(sys/fcntl.h)
AC_CHECK_HEADERS(sys/file.h)
AC_CHECK_HEADERS(sys/signal.h)
AC_CHECK_HEADERS(termios.h)
AC_PROG_GCC_TRADITIONAL
AC_SUBST(JAVAINCLUDE)
AC_SUBST(JAVANATINC)
AC_SUBST(JCLASSPATH)
AC_SUBST(JAVA_H_CLASSPATH)
AC_SUBST(TOP)
AC_SUBST(JPATH)
AC_SUBST(TARGETLIB)
AC_SUBST(LDFLAG)
AC_SUBST(CFLAGS)
AC_SUBST(VERBOSE_IOEXCEPTIONS)
AC_SUBST(THREAD_FLAG)
AC_SUBST(IDENTIFIERS)
AC_SUBST(OS_NAME)
AC_SUBST(OS_ARCH)
AC_SUBST(OS_VERSION)
AC_SUBST(JAVA_VERSION)
AC_SUBST(JAVA_VENDOR)
AC_SUBST(JAVA_HOME)
AC_SUBST(JAVA_LIBRARY_PATH)
AC_SUBST(JAVA_CLASS_PATH)
AC_SUBST(JAVA_CLASS_VERSION)
AC_SUBST(JAVAH_FIX)
AC_SUBST(JCL_PATH)
AC_SUBST(RXTX_PATH)
JCL_PATH=lib
TOP="`pwd`"

[case "$host_os" in
	*-gnu)
	CFLAGS="$CFLAGS -D_POSIX_SOURCE";;
	*);;
esac]
AC_ARG_ENABLE(RXTXIDENT,
	[  --enable-RXTXIDENT      RXTX CommPortIdentifier support (not implemented) [default=no]],
	echo $enable_RXTXIDENT, 
	enable_RXTXIDENT="no"
)
	if test x$enable_RXTXIDENT = xyes; then  
		IDENTIFIERS="\$(TOP)/gnu/io/CommPortIdentifier.class \
			\$(TOP)/gnu/io/CommPortEnumerator.class \
			\$(TOP)/gnu/io/CpoList.class \
			\$(TOP)/gnu/io/CpoListEntry.class \
			\$(TOP)/gnu/io/OwnershipEventThread.class"
	fi
AC_ARG_ENABLE(PRINTER,
	[  --enable-PRINTER        PRINTER support (experimental) [default=yes]],
	echo $enable_PRINTER,
	enable_PRINTER="yes"
)
	if test x$enable_PRINTER = xyes; then  
		TARGETLIB="\$(TOP)/\$(target_alias)/libSerial.la \
			\$(TOP)/\$(target_alias)/libParallel.la"
	else
		TARGETLIB="\$(TOP)/\$(target_alias)/libSerial.la"
	fi
#AC_ARG_ENABLE
#(
#	VERBOSE,
#	[  --enable-VERBOSE        more verbose native io messages [default=yes]],
#	echo $enable_VERBOSE, 
#	enable_VERBOSE="yes"
#)
#   if test x$enable_VERBOSE = xno; then 
#      VERBOSE_IOEXCEPTIONS="-DNO_VERBOSE_IOEXCEPTIONS"
#   fi

AC_ARG_ENABLE(NATIVETHREADS,
	[  --enable-NATIVETHREADS  Use jdk native-threads.  Overrides environment ],
	echo $enable_NATIVETHREADS, 
	enable_NATIVETHREADS="no"
)
if test x$enable_NATIVETHREADS = xyes; then 
	THREAD_FLAG="native"
else
	THREAD_FLAG=""
fi
AC_ARG_ENABLE(FULL_EVENT, 
	[  --enable-FULL_EVENT     Full event notification (linux 2.2)],
	if test x$enable_FULL_EVENT = xyes; then 
		CFLAGS="$CFLAGS -DFULL_EVENT"
		THREADS_FLAG="native"
	fi
)
AC_ARG_ENABLE(JDK_HOME,
	[  --enable-JDK_HOME       get JDK location from \$JDK_HOME],
	if test x$enable_JDK_HOME = xyes; then 
		JPATH="`echo $JDK_HOME`"
		if test x$JDK_HOME = x; then
			AC_MSG_ERROR([Could not find java in \$JDK_HOME.])
		fi
	fi
)
AC_ARG_ENABLE(DEBUG,
	[  --enable-DEBUG          Print debugging info from SerialImp.c],
	if test x$enable_DEBUG = xyes; then 
		CFLAGS="$CFLAGS -DDEBUG"
	fi
)
if test "$JPATH" = ""; then
	JPATH="`which java | sed s#/\bin\/java##`"
	if test x$JPATH = x; then
		AC_MSG_WARN([Could not find java in \$PATH.  Trying \$JDK_HOME.])
		if test x$JDK_HOME = x; then
			AC_MSG_ERROR([Could not find java in \$JDK_HOME.])
		fi
	JPATH="`echo $JDK_HOME`"
	fi
fi
JAVANATINC="\$(JPATH)/`cd $JPATH; find ./include -name jni_md.h|sed s#jni_md\\\\.h##|sed s#\\\\.\\\\/## |head -n1`"
if [ test `find $JPATH/include -name jni_md.h|wc -l` != "1" ]; then
	echo
	echo WARNING:  configure is having a hard time determining which 
	echo directory contains the file jni_md.h.  Edit Makefile and fix the 
	echo variable JAVANATINC to point to the correct directory.
	echo
	echo The following options are available:
	find $JPATH/include -name jni_md.h|sed s#jni_md\.h##
	echo
	echo If there are more than one option available the first was selected. 
	echo
	echo Press enter to continue.
	read
fi
	

cat > conftest.java << EOF
/* this may be usefull for getting around java cobwebs during build */
public class conftest 
{
	public static void main(String[[]] args) 
	{
		System.out.println(System.getProperty(args[[0]]));
	}
}
EOF

$JPATH/bin/javac conftest.java
echo -n checking os.name  " "
OS_NAME=`$JPATH/bin/java conftest "os.name"`
echo $OS_NAME
echo -n checking os.arch   " "
OS_ARCH=`$JPATH/bin/java conftest "os.arch"`
echo $OS_ARCH
echo -n checking java.version   " "
JAVA_VERSION=`$JPATH/bin/java conftest "java.version"`
echo $JAVA_VERSION
echo -n checking java.vendor " "
JAVA_VENDOR=`java conftest "java.vendor"`
echo $JAVA_VENDOR

echo -n checking os.version   " "
OS_VERSION=`uname -r`
echo $OS_VERSION
rm -f conftest.java
rm -f conftest.class

#Did you ever think about installing the jar in the standard extension path for
#jdk 1.2?  I manually moved comm.jar and jcl.jar to /usr/local/jdk/jre/lib/ext
#and now I don't need them in my classpath.  I also moved libSerial.so to
#/usr/local/jdk/jre/lib/i386, which is searched automatically for native libs.
#This seems to be the 'standard' way of doing things in 1.2.  Do you think it's
#a good idea?
function fix_parameters()
{
	if [ ! grep  "Driver=gnu.io.RXTXCommDriver" $1 &> /dev/null ]; then 
		echo "------------------------------------------------------"
		echo "RxTx requires the following information in"
		echo " $1:"
		echo
		echo "Driver=gnu.io.RXTXCommDriver"
		echo
		echo "The command configure will use to fix this is:"
		echo
		echo "echo \"Driver=gnu.io.RXTXCommDriver\" > $1"
		echo
		echo "------------------------------------------------------"
		echo -n "Is it ok to place it there now? [[y/n]] "
		read REPLY
		if [ test "$REPLY" = "y" || test "$REPLY" = "Y" ];then
			echo "Driver=gnu.io.RXTXCommDriver" > $1;
		fi;

	fi;
}
function check_prefix()
{
	if test $prefix != "/usr";then 
		echo
		echo "WARNING:  configure was not run with option --prefix=/usr"
		echo "          Unless /usr/local/lib or the specified prefix is in" 
		echo "          the linkers path this will cause problems later on."
		echo
		echo "          Press enter to continue."
		read
	fi
}
function check_kernel_headers()
{
	if ! grep -q `uname -r` /usr/include/linux/version.h;then 
		echo
		echo "       WARNING:  Kernel include files do not match the current kernel"
		echo
		echo "                 Press enter to continue." 
		read
	fi
}
function fix_comm_jar()
{
	if ! test -f $1;then
		echo "------------------------------------------------------"
		echo "The JCL extension to RxTx requires comm.jar"
		echo "If you intend to use RxTx for commapi support comm.jar"
		echo "needs to be located in $1"
		echo
		echo "You can either quit configure and place the jar in the"
		echo "correct location or let this script do it."
		echo 
		echo "------------------------------------------------------"
		echo -n "Do you wish to [[Q]]uit or use the [[S]]cript? [[Q/S]] "
		read REPLY
		if [ test "$REPLY" = "q" || test "$REPLY" = "Q" ];then
			echo "When you are done rerun configure"
			exit
		else if [ test "$REPLY" = "s" || test "$REPLY" = "S" ];then
			FILE="null"
			until test -f $FILE;do
				echo "Please enter the full path to comm.jar (example /home/fred/commapi/comm.jar):"
				read FILE
			done;
			echo -n "Is it ok to copy $FILE to $1?[[y/n]] "
			read REPLY
			if [ test "$REPLY" = "y" || test "$REPLY" = "Y" ];then
				cp $FILE $1
				return
			fi;
		fi;fi;
		echo "configure is unable to continue.  Please try again or manual fix the problem."
		exit
	
	fi;
}

JAVAINCLUDE="\$(JPATH)/include"
if test "$CC" = "gcc" || test "$CC"="egcs"; then
	case $JAVA_VENDOR in
	IBM*)
		CFLAGS="$CFLAGS -D_BSD_SOURCE"
		;;
	*)
		CFLAGS="$CFLAGS -D_BSD_SOURCE -ansi"
		;;
	esac
fi
[ case $OS_NAME in 
Linux)
	check_kernel_headers
	case $JAVA_VERSION in
	1.2*) 
		fix_parameters $JPATH/jre/lib/javax.comm.properties
		fix_comm_jar $JPATH/jre/lib/ext/comm.jar
		JCLASSPATH="-classpath .:\$(TOP):\$(TOP)/src:$CLASSPATH"
		JAVA_H_CLASSPATH="-classpath .:`find $JPATH/ -name comm.jar |head -n1`"
		JCL_PATH="\$(JPATH)/lib"
		JCL_PATH="jre/lib/ext"

		case $OS_ARCH in
		i386)
			RXTX_PATH="\$(JPATH)/jre/lib/i386"
		;;
		*)
			# best we can do without knowing what java returns
			RXTX_PATH="\$(JPATH)/jre/lib/"
		;;
		esac
		case $OS_VERSION in
		2.2.*|2.3.*)
			CFLAGS="$CFLAGS -DFULL_EVENT"
		;;
		1.*|2.0.*|2.1.*)
		;;
		esac
	;;
	1.*) 
		fix_parameters $JPATH/lib/javax.comm.properties
		fix_comm_jar $JPATH/lib/comm.jar
		check_prefix
		JCLASSPATH="-classpath .:\$(TOP):\$(TOP)/src:\$(JPATH)/lib/classes.zip:\$(JPATH)/lib/comm.jar:\$(JPATH)/lib/jcl.jar:$CLASSPATH"
		JAVA_H_CLASSPATH="\$(JCLASSPATH)"
		RXTX_PATH="\$(prefix)/lib/"
		JAVAH_FIX="if [ ! \$(THREADS_FLAG) ] && [ ! -d com ]; then if [ ! -f \$(JPATH)/lib/comm.jar ]; then echo \"Please install comm.jar from CommAPI in \$(JPATH)/java/lib/\"; else \$(JAR) -xf \$(JPATH)/lib/comm.jar;  fi; fi;"
		JCL_PATH="lib"
		case $OS_VERSION in
		2.2.*|2.3.*)
			CFLAGS="$CFLAGS -DFULL_EVENT"
		;;
		1.*|2.0.*|2.1.*)
		;;
		esac
	;;
	esac 
;;
*BSD)
	RXTX_PATH="\$(prefix)/lib"
	JCL_PATH="lib"
	CFLAGS="$CFLAGS -D_NO_POSIX=1 -D_NO_XOPEN4=1"
	JCLASSPATH="-classpath .:\$(TOP):\$(TOP)/src:\$(JPATH)/lib/classes.zip:\$(JPATH)/lib/comm.jar:\$(JPATH)/lib/jcl.jar:$CLASSPATH"
	case $JAVA_VERSION in
	1.2*) 
		fix_parameters $JPATH/jre/lib/javax.comm.properties
		fix_comm_jar $JPATH/jre/lib/ext/comm.jar
		JCLASSPATH="-classpath .:\$(TOP):\$(TOP)/src:$CLASSPATH"
	;;
	1.*) 
		check_prefix
		fix_parameters $JPATH/lib/javax.comm.properties
		fix_comm_jar $JPATH/lib/comm.jar
	;;
	*)
	;;
	esac
;;
irix*)
	JCL_PATH="lib"
	CFLAGS="$CFLAGS -D_NO_POSIX=1 -D_NO_XOPEN4=1"
	JCLASSPATH="-classpath .:\$(TOP):\$(TOP)/src:\$(JPATH)/lib/classes.zip:\$(JPATH)/lib/comm.jar:\$(JPATH)/lib/jcl.jar:$CLASSPATH"
;;
*)
	JCL_PATH="lib"
	CFLAGS="$CFLAGS -D_NO_POSIX=1 -D_NO_XOPEN4=1"
	JCLASSPATH="-classpath .:\$(TOP):\$(TOP)/src:\$(JPATH)/lib/classes.zip:\$(JPATH)/lib/comm.jar:\$(JPATH)/lib/jcl.jar:$CLASSPATH"
;;
esac ]
AC_OUTPUT(Makefile)



################################  END ########################################



# Toys.  Gota lovem.
#echo -n checking java.home   " "
#JAVA_HOME=`java conftest "java.home"`
#echo $JAVA_HOME
#echo -n checking java.library.path   " "
#JAVA_LIBRARY_PATH=`java conftest "java.library.path"`
#echo $JAVA_LIBRARY_PATH
#echo -n checking java.class.path   " "
#JAVA_CLASS_PATH=`java conftest "java.class.path"`
#echo $JAVA_CLASS_PATH
#echo -n checking java.class.version   " "
#JAVA_CLASS_VERSION=`java conftest "java.class.version"`
#echo $JAVA_CLASS_VERSION
