There appears to be an off by one read()/dataavailable error when switching 
timeouts/thresholds.  a read() fires up and waits without timeout/x bytes.  After the first read everything is ok.

Buffer Size is just a var.  No memory is allocated.  This was done to duplicate the
behavior in the behaviour table in javax.comm.CommPort.html.  Its not clear to me 
if the buffers are just mallocs or modem buffers.  Any experts there?

While looking through the blackdown mail list, it was obvious that some people
really want printer support.  Here is a chance to put it in themselves.

ParallelPort and CommPortIdentifier files are provided so you can start 
implementing right away without worrying about how automake works.  They are 
not written in stone.  If you want to do it differently feel free.
The good side is the stuff compiles as is.  

*BSD SerialPort support
	freebsd serial works.
	kernel specific implementations
	buggy event loop.

Win95/98 with mingw32
	The maintainer has integrated Wayne Roberts improvements.  The code
	95% there but needs work.
	for starters look at select()
	http://msdn.microsoft.com/library/techart/msdn_serial.htm
	for documentation.   WaitForSingleObject() may be of use.

RXTXPort.java
	framing control -?-
	buffer control -?-
	look for FIXME

ParallelPort support.  Needs some code.
	./configure --enable-PRINTER will create a Makefile that uses it.
	The SerialPort code should help one get up to speed on implementing
	files:
		ParallelImp.c stubs + a copy of SerialImp.c
                      A  large fraction of the stubs are filled in now.
		ParallelImp.h
		LPRPort.java simular to RXTXPort.java + stubs.
	Printer support was working earlier.  Recent kernel changes have 
	probably broken the printer support.  More comments in ParallelImp.c

CommPortIdentifier support. Needs some code.
	./configure --enable-RXTXIDENT will create a Makefile that uses it.
	Plenty of example code can be found in commapi/samples/porting
	Please dont send in Sun's code.  

	Only reason I can think of for implementing CommPortIdentifier is
	to get rid of the "Port In Use By Unknown Solaris Application"
	message.

	files:
		CommPortEnumerator.java  All stubs.
		CommPortIdentifier.java     "
		CpoList.java                "
		CpoListEntry.java           "
		LPRPort.java                "
		OwnershipEventThread.java   "
	
------------------
backwards compatibility for older linux systems.
------------------
non linux specific implementations
------------------
allow the library to catch sigint so it can shut down the port properly when
sent
------------------
Add more documentation.
------------------

IDEAS:

Make rxtx apps capable of being spawned from mgetty.  <gluck@tempo-services.com.au>
