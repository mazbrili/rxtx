#-------------------------------------------------------------------------
#   rxtx is a native interface to serial ports in java.
#   Copyright 1997-2001 by Trent Jarvi trentjarvi@yahoo.com.
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Library General Public
#   License as published by the Free Software Foundation; either
#   version 2 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public
#   License along with this library; if not, write to the Free
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#-------------------------------------------------------------------------
#  This Makefile works on windows 98/NT with mingw32 in a DOS shell
#  One catch.  We cant figure out how to generate .def files with default
#  DOS tools and mingw32.  Install Cygwin if you are adding/removing/chaninging
#  C functions.
#  mingw build tools are used
#  PATH=c:\mingw\bin;c:\jdk118\bin;%PATH%
#  mingw32 version 1.0.1-20010726
#  jdk was 1.1.8
#  java.sun.com

######################
#  user defined variables
######################

# path to the source code (directory with SerialImp.c) Unix style path
SRC=../src
# and the dos path
DOSSRC=..\\\src

# path to the jdk directory that has include, bin, lib, ... Unix style path
JDKHOME=C:/jdk1.1.8

#path to mingw32
MINGHOME="D:/mingw"

# path to install RXTXcomm.jar DOS style path
COMMINSTALL="C:\jdk1.1.8\lib"

# path to install the shared libraries DOS style path
LIBINSTALL="C:\jdk1.1.8\bin"

# path to the mingw32 libraries (directory with libmingw32.a) DOS style path
LIBDIR="D:\mingw\lib"

######################
#  End of user defined variables
######################


######################
#  Tools
######################

AS=as
CC=gcc
LD=ld
DLLTOOL=dlltool
# this looks like a nice tool but I was not able to get symbols in the dll.
DLLWRAP=dllwrap

CLASSPATH=-classpath ".;C:\jdk1..18\lib\RXTXcomm.jar;c:\BlackBox.jar;c:\jdk1.1.8\lib\classes.zip"
JAVAH=javah $(CLASSPATH)
JAR=jar 
JAVAC=javac $(CLASSPATH)

######################
#  Tool Flags
######################

CFLAGS= -O2 $(INCLUDE) -mno-cygwin -DWIN32 -D __int64="long long" -mno-fp-ret-in-387 -Wall -D TRENT_IS_HERE_DEBUGGING_ENUMERATION -DTRENT_IS_HERE_DEBUGGING_THREADS
INCLUDE= -I . -I $(JDKINCLUDE) -I $(JDKINCLUDE)/win32 -I $(SRC) -I include -I $(MINGINCLUDE)
JAVAHFLAGS= -jni -d include
LIBS=-L $(LIBDIR) -luser32 -lgdi32 -lcomdlg32 -lkernel32 -ladvapi32 -lmingw32 -lmoldname -lcrtdll

# path to the java native interface headers (directory with jni.h)
JDKINCLUDE=$(JDKHOME)/include
MINGINCLUDE=$(MINGHOME)/include
JAVAFILES = $(wildcard $(SRC)/*.java)
CFILES=$(wildcard $(SRC)/*.c) $(wildcard $(SRC)/*.cc)
TARGETLIBS= Serial.dll 
DLLOBJECTS= fixup.o SerialImp.o termios.o init.o fuserImp.o

all:  $(TARGETLIBS) # rebuild  rebuild will force everything to be built.

rebuild:
	rm -rf gnu include RXTXcomm.jar Serial.* * *.O.o *.O gnutimestamp 

include:
	mkdir include

gnu:
	mkdir gnu
	mkdir gnu\\\io

# yayaya We should have put the files in gnu.io to start with
gnutimestamp:	$(JAVAFILES) $(CFILES) include gnu
	xcopy $(DOSSRC)\\*.* gnu\\io\\
	echo > gnutimestamp

# FIXME make 3.79.1 behaves really strage if we use %.o rules.

init.o:	
	$(CC) $(CFLAGS) -c $(SRC)/init.cc -o init.o

fixup.o:
	$(CC) $(CFLAGS) -c $(SRC)/$*.c -o fixup.o

SerialImp.o:
	$(CC) $(CFLAGS) -c $(SRC)/SerialImp.c -o SerialImp.o

fuserImp.o:
	$(CC) $(CFLAGS) -c $(SRC)/fuserImp.c -o fuserImp.o

termios.o:
	$(CC) $(CFLAGS) -c $(SRC)/$*.c -o termios.o

#  This file is a pain in the rear to generate.  If your looking at this you
#  need to install cygwin.

$(SRC)/Serial.def:	$(DLLOBJECTS)
	$(LD) --base-file Serial.base --dll -o Serial.dll $(DLLOBJECTS) $(LIBS) -e _dll_entry@12
	xcopy  $(DOSSRC)\\Serial.def gnu\\io\\

#	echo EXPORTS >$(SRC)/Serial.def;for i in `nm Serial.dll | grep "T _Java"|cut -b 13-`;do echo -n $$i|sed s#@.*##;echo "="$$i;done >> $(SRC)/Serial.def


$(TARGETLIBS):	RXTXcomm.jar $(DLLOBJECTS)  $(SRC)/Serial.def
	$(LD) --base-file Serial.base --dll -o Serial.dll $(DLLOBJECTS) \
		$(LIBS) -e _dll_entry@12
	$(DLLTOOL) --as=$(AS) --dllname Serial.dll --def $(SRC)/Serial.def \
		--base-file Serial.base --output-exp Serial.exp
	$(LD) --base-file Serial.base Serial.exp -dll -o Serial.dll \
		$(DLLOBJECTS) $(LIBS) -e _dll_entry@12
	$(DLLTOOL) --as=$(AS) --dllname Serial.dll --def $(SRC)/Serial.def \
		--base-file Serial.base --output-exp Serial.exp
	$(LD) --base-file Serial.base Serial.exp -dll -o Serial.dll \
		$(DLLOBJECTS) $(LIBS) -e _dll_entry@12
#
# This should replace the mess above if it worked.
# nm shows no symbols in the dll produced.  The old stuff above works ok.
#	$(DLLWRAP) --output-def $*.def --output-exp $*.exp \
#		--add-stdcall-alias --driver-name gcc -mwindows \
#		--target=i386-mingw32 -o $*.dll $(DLLOBJECTS) $(LIBS) -s
#		-mno-cygwin

RXTXcomm.jar:	gnutimestamp
	$(JAVAC) gnu\\io\\*.java
	$(JAR) -cf RXTXcomm.jar gnu\\io\\*.class
	$(JAVAH) $(JAVAHFLAGS) $(patsubst gnu/io/%.java,gnu.io.%,$(wildcard gnu/io/*.java))

include/config.h:  gnutimestamp
	echo "#define HAVE_FCNTL_H 1" > include\\\config.h
	echo "#define HAVE_SIGNAL_H 1" >> include\\\config.h
	echo "#define HAVE_SYS_FCNTL_H 1" >> include\\\config.h
	echo "#define HAVE_SYS_FILE_H 1" >> include\\\config.h
	echo "#undef HAVE_SYS_SIGNAL_H" >> include\\\config.h
	echo "#undef HAVE_TERMIOS_H" >> include\\\config.h

install: all
	xcopy RXTXcomm.jar $(COMMINSTALL)
	xcopy RXTXcomm.jar "e:\matlab~1\java\jarext\commapi\win32"
	xcopy $(TARGETLIBS) $(LIBINSTALL)
	xcopy $(TARGETLIBS) "e:\matlab~1\bin\win32"

uninstall:
	del $(COMMINSTALL)\\\RXTXcomm.jar
	del $(LIBINSTALL)\\\$(TARGETLIBS)

clean:
	deltree gnu\\\io\\\*.*
	deltree include
	del Serial.* gnutimestamp *.o *.O RXTXcomm.jar
